{"version":3,"sources":["data/compas.csv","data/adult.csv","util/generateSubgroups.js","util/clusterDescriptions.js","util/globals.js","workers/dataLoader.js","workers/WebWorker.js","components/ClassDistribution.js","components/MetricsDistribution.js","components/ExpandedCard.js","components/Histogram.js","components/FeatureDrawer.js","components/ClusterDistribution.js","util/neighboringClusters.js","components/GroupSuggestions.js","components/MetricSelector.js","components/StripPlot.js","components/Welcome.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","createSubgroups","data","groups","nextId","allFeatures","allValues","sub","Map","groupFeatures","Object","keys","forEach","inst","key","vals","include","feat_name","v","includes","length","push","slice","old","get","undefined","set","insts","subgroups","metrics","i","group","fm","calculateFairnessMetrics","dist","f","thisVals","v_dist","item","entries","tuple","collator","Intl","Collator","numeric","sensitivity","distrib_arr","r","sort","a","b","compare","calcValueDist","id","feats","type","distrib","calculateSubgroupMetrics","m","items","p","n","tp","tn","fp","fn","predicted","Math","round","parseFloat","actual","parseInt","calculateBaseRates","size","acc","rec","spec","prec","npv","fnr","fpr","fdr","for","f1","k","isNaN","getClusters","features","splice","indexOf","all_atts","attr","s","Set","map","clustInstances","cluster","clustDistributions","clustDistrib","feat","featDistrib","clustEntropies","_","clustEntr","arr","log2","shannonEntropy","clustDefining","orderedFeats","orderedVals","reduce","clusterid","SECONDARY_COLOR","TERTIARY_COLOR","METRICS","label","value","self","addEventListener","e","out","avgs","s_arr","Array","from","postMessage","WebWorker","worker","code","toString","blob","Blob","Worker","URL","createObjectURL","$schema","mark","tooltip","width","transform","calculate","as","encoding","y","field","axis","title","labelFontSize","labelPadding","x","aggregate","format","color","scale","domain","range","legend","ClassDistribution","this","props","clickedGroup","name","val","hoveredGroup","values","Component","height","spacing","row","padding","header","labelLimit","labels","MetricsDistribution","concat","selectedMetrics","metric","styles","card","marginTop","marginRight","minHeight","overflow","featureStyle","textAlign","avatar","backgroundColor","expand","margin","hovered","paddingRight","clicked","display","flexDirection","justifyContent","marginBottom","selectedGroups","paddingLeft","hoveredCell","ExpandedCard","export","activeGroups","text","filename","document","createElement","setAttribute","encodeURIComponent","click","saveText","JSON","stringify","nextProps","nextState","classes","featsClick","featsHov","clickedCell","align","className","exportButton","variant","onClick","container","xs","table","style","tableHeader","withStyles","boxWidth","boxHeight","Histogram","update","drawGlobalDistBar","dataDistrib","featName","featIndex","maxy","groupIndex","drawGroupDistBar","drawBar","d3","remove","feat_dist_arr","data_arr","bar_type","node","svg","append","state","left","top","rangeRound","d","hght","tip","d3tip","offset","html","call","selectAll","enter","bandwidth","on","show","hide","right","bottom","ref","drawer","flexShrink","maxWidth","feature","button","listItem","paddingBottom","alignItems","listText","radio","divider","boxLabel","textTransform","fontSize","fontWeight","info","cursor","FeatureDrawer","compareState","oldState","newState","opened","checked","subchecked","handleToggle","newChecked","has","delete","add","setState","handleSubToggle","feat_i","item_i","subnew","handleClick","newOpened","handleHover","j","selector","handleUnhover","handleClickSubgroup","val_arr","valIndex","max_ys","paper","anchor","placement","onChange","disabled","in","timeout","unmountOnExit","value_i","onMouseOver","onMouseOut","primary","order","ClusterDistribution","makeup","maxVal","getNeighbors","subgroup","oneAwayGroups","same","diffFeatInd","ind","GroupSuggestions","mouseEnter","suggestedHover","mouseLeave","suggestedUnhover","mouseClick","suggestedClick","pageRight","page","clusters","pageLeft","changeView","target","showSimilar","neighbors","changeSort","clustersLoaded","similarGroups","neigh","index","onMouseEnter","onMouseLeave","cardContent","diffTable","featDiff","settings","sortText","headerDivider","cards","filter","clust","minSize","leftCell","cell","paging","marginLeft","fab","float","flexWrap","inputComponent","inputRef","components","Control","fullWidth","InputProps","inputProps","selectProps","input","innerRef","children","innerProps","textFieldProps","Menu","square","MultiValue","tabIndex","classNames","chip","chipFocused","isFocused","onDelete","removeProps","deleteIcon","NoOptionsMessage","noOptionsMessage","Option","buttonRef","selected","component","isSelected","Placeholder","placeholder","ValueContainer","valueContainer","MetricSelector","handleChange","onMetricChange","selectedOptions","suggs","suggestions","selectorWrapper","options","isMulti","theme","minWidth","flex","unit","emphasize","palette","grey","position","zIndex","StripPlot","createStripPlot","xAxis","select","xScale","barHover","barClick","avgG","toFixed","yScale","tickPadding","ticks","tickFormat","prevProps","plot","body","content","subtitle","flexGrow","tagline","loadingScreen","loadingText","paddingTop","loadingProgress","datasets","tabletitle","adddata","dataLink","textDecorationColor","textDecoration","socialLink","background","fontFamily","borderColor","borderRadius","social","icon","Welcome","loadIcon","loading","scope","href","loadData","adultData","compasData","ReactGA","initialize","pageview","window","location","pathname","search","createMuiTheme","main","secondary","overrides","MuiSlider","thumb","track","appBar","slider","reset","App","loaderWorker","dataLoaded","then","classed","foundArr","el","newActives","changeMinSize","resetGroups","handleMetricsChange","inline","step","min","max","metricSelector","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdfee5d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/compas.bd26b7d4.csv\";","module.exports = __webpack_public_path__ + \"static/media/adult.94c06f58.csv\";","/** Since ES6 Maps do equality by reference, objects can't really be used as keys.\r\n *  Here we simply use a concatenated string as the key.\r\n **/\r\nexport function createSubgroups(data, groups, nextId, allFeatures, allValues) {\r\n  let sub = new Map();\r\n\r\n  let groupFeatures = Object.keys(groups);\r\n\r\n  data.forEach(inst => {\r\n    let key = \"\";\r\n    let vals = [];\r\n\r\n    let include = true;\r\n\r\n    groupFeatures.forEach(feat_name => {\r\n      let v = inst[feat_name];\r\n      if (groups[feat_name].includes(v) || groups[feat_name].length === 0) {\r\n        vals.push(v);\r\n        key += v + \", \";\r\n      } else {\r\n        include = false;\r\n      }\r\n    });\r\n\r\n    if (include) {\r\n      //  Remove last \", \"\r\n      key = key.slice(0, -2);\r\n\r\n      // If key doesn't exist add entry, else push to group\r\n      let old = sub.get(key);\r\n      if (old === undefined) {\r\n        sub.set(key, { vals: vals, insts: [inst] });\r\n      } else {\r\n        old[\"insts\"].push(inst);\r\n        sub.set(key, old);\r\n      }\r\n    }\r\n  });\r\n\r\n  return calculateSubgroupMetrics(\r\n    sub,\r\n    nextId,\r\n    groupFeatures,\r\n    allFeatures,\r\n    allValues\r\n  );\r\n}\r\n\r\n/**\r\n * Calculate Common Fairness Metrics\r\n *\r\n * @param counts: counts of tp, tn, fp, tn, p, n\r\n * Note:\r\n * acc = accuracy\r\n * rec = recall\r\n * prec = precision\r\n * spec = specificity\r\n * npv = negative predictive value\r\n * fnr = false negative rate or miss rate\r\n * fpr = false positive rate\r\n * fdr = false discovery rate\r\n * for = false omission rate\r\n * f1 = f1 score\r\n */\r\nexport function calculateFairnessMetrics(data) {\r\n  let m = calculateBaseRates(data);\r\n\r\n  let metrics = {\r\n    size: data.length,\r\n    p: (100 * m.p) / data.length,\r\n    n: (100 * m.n) / data.length,\r\n    acc: (100 * (m.tp + m.tn)) / (m.p + m.n),\r\n    rec: (100 * m.tp) / (m.tp + m.fn),\r\n    spec: (100 * m.tn) / (m.fp + m.tn),\r\n    prec: (100 * m.tp) / (m.tp + m.fp),\r\n    npv: (100 * m.tn) / (m.tn + m.fn),\r\n    fnr: (100 * m.fn) / (m.fn + m.tp),\r\n    fpr: (100 * m.fp) / (m.fp + m.tn),\r\n    fdr: (100 * m.fp) / (m.fp + m.tp),\r\n    for: (100 * m.fn) / (m.fn + m.tn),\r\n    f1: (100 * 2 * m.tp) / (2 * m.tp + m.fp + m.fn)\r\n  };\r\n\r\n  Object.keys(metrics).forEach(k => {\r\n    if (isNaN(metrics[k])) {\r\n      metrics[k] = 0;\r\n    }\r\n  });\r\n\r\n  return metrics;\r\n}\r\n\r\n/** Calculate performance metrics for all subgroups */\r\nfunction calculateSubgroupMetrics(\r\n  subgroups,\r\n  nextId,\r\n  groupFeatures,\r\n  allFeatures,\r\n  allValues\r\n) {\r\n  let metrics = [];\r\n\r\n  // Keep track of the ID for all active subgroups\r\n  let i = nextId;\r\n\r\n  subgroups.forEach((group, key) => {\r\n    let fm = calculateFairnessMetrics(group.insts);\r\n    let dist = calcValueDist(group.insts, allFeatures, allValues);\r\n\r\n    metrics.push({\r\n      id: i,\r\n      feats: groupFeatures,\r\n      vals: group.vals,\r\n      insts: group.insts,\r\n      metrics: fm,\r\n      type: \"top\",\r\n      distrib: dist\r\n    });\r\n    i++;\r\n  });\r\n\r\n  return metrics;\r\n}\r\n\r\n/** Calculate the base classification COUNTS for a group of instances */\r\nfunction calculateBaseRates(items) {\r\n  let p = 0;\r\n  let n = 0;\r\n  let tp = 0;\r\n  let tn = 0;\r\n  let fp = 0;\r\n  let fn = 0;\r\n\r\n  items.forEach(item => {\r\n    let predicted = Math.round(parseFloat(item[\"out\"]));\r\n    let actual = parseInt(item[\"class\"], 10);\r\n\r\n    if (predicted === 1 && actual === 1) {\r\n      tp++;\r\n      p++;\r\n    } else if (predicted === 0 && actual === 0) {\r\n      tn++;\r\n      n++;\r\n    } else if (predicted === 1 && actual === 0) {\r\n      fp++;\r\n      n++;\r\n    } else {\r\n      fn++;\r\n      p++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    p: p,\r\n    n: n,\r\n    tp: tp,\r\n    tn: tn,\r\n    fp: fp,\r\n    fn: fn\r\n  };\r\n}\r\n\r\nfunction calcValueDist(insts, allFeatures, allValues) {\r\n  // init dist\r\n  let dist = {};\r\n  allFeatures.forEach((f, i) => {\r\n    let thisVals = allValues[i];\r\n    let v_dist = {};\r\n    thisVals.forEach((v, i) => {\r\n      v_dist[v] = 0;\r\n    });\r\n    dist[f] = v_dist;\r\n  });\r\n\r\n  // populate dist\r\n  insts.forEach((item, i) => {\r\n    Object.entries(item).forEach(tuple => {\r\n      // tuple = [\"age\", 17]\r\n      dist[tuple[0]][tuple[1]] += 1;\r\n    });\r\n  });\r\n\r\n  // turn into array with values sorted\r\n  let collator = new Intl.Collator(undefined, {\r\n    numeric: true,\r\n    sensitivity: \"base\"\r\n  });\r\n\r\n  let distrib_arr = [];\r\n  allFeatures.forEach(feat_name => {\r\n    let r = Object.entries(dist[feat_name]);\r\n    r.sort((a, b) => collator.compare(a[0], b[0]));\r\n    distrib_arr.push(r);\r\n  });\r\n\r\n  return distrib_arr;\r\n}\r\n","import { calculateFairnessMetrics } from \"../util/generateSubgroups\";\r\n\r\nfunction shannonEntropy(arr, size) {\r\n  let s = 0;\r\n  Object.keys(arr).forEach(k => {\r\n    arr[k] = arr[k] / size;\r\n    let v = arr[k];\r\n    if (v !== 0) {\r\n      s += v * Math.log2(v);\r\n    }\r\n  });\r\n  return -s;\r\n}\r\n\r\n/**\r\n * Given an array of instances with a class, output label, and cluster, returns an array of clusters\r\n * with the defining feature, corresponding values, instances that belong to\r\n * the cluster, and performance metrics.\r\n */\r\nexport function getClusters(data, feats, vals) {\r\n  // Get all features, ignoring class, out, and cluster\r\n  let features = Object.keys(data[0]);\r\n  features.splice(features.indexOf(\"class\"), 1);\r\n  features.splice(features.indexOf(\"out\"), 1);\r\n  features.splice(features.indexOf(\"cluster\"), 1);\r\n\r\n  // Calculte all possible features values\r\n  let all_atts = {};\r\n  features.forEach(attr => {\r\n    let s = new Set(data.map(p => p[attr]));\r\n    all_atts[attr] = s;\r\n  });\r\n\r\n  // Group instances by cluster\r\n  let clustInstances = [];\r\n  //let clusters = runClustering(data, feats, vals);\r\n  data.forEach(inst => {\r\n    // Ignore cluster -1, since unclustered\r\n    if (inst.cluster !== -1) {\r\n      if (clustInstances[inst.cluster] == null) {\r\n        clustInstances[inst.cluster] = [inst];\r\n      } else {\r\n        clustInstances[inst.cluster] = [...clustInstances[inst.cluster], inst];\r\n      }\r\n    }\r\n  });\r\n\r\n  // Calculate value count per cluster\r\n  let clustDistributions = [];\r\n  clustInstances.forEach((cluster, i) => {\r\n    clustDistributions[i] = {};\r\n    let clustDistrib = clustDistributions[i];\r\n    clustDistrib[\"size\"] = cluster.length;\r\n    features.forEach(feat => {\r\n      clustDistrib[feat] = {};\r\n      let featDistrib = clustDistrib[feat];\r\n      cluster.forEach(inst => {\r\n        featDistrib[inst[feat]] = featDistrib[inst[feat]]\r\n          ? featDistrib[inst[feat]] + 1\r\n          : 1;\r\n      });\r\n    });\r\n  });\r\n\r\n  // Calculate entropy per cluster per feature, normalizing value counts to get distributions\r\n  let clustEntropies = [];\r\n  clustDistributions.forEach((_, i) => {\r\n    clustEntropies[i] = {};\r\n    let clustEntr = clustEntropies[i];\r\n    let clustDistrib = clustDistributions[i];\r\n    let size = clustDistrib[\"size\"];\r\n    features.forEach(feat => {\r\n      clustEntr[feat] = shannonEntropy(clustDistrib[feat], size);\r\n    });\r\n  });\r\n\r\n  // TODO: Let user set or see more than 3 features\r\n  // Get top K defining features and values for each cluster\r\n  let clustDefining = [];\r\n  clustEntropies.forEach((cluster, i) => {\r\n    let orderedFeats = Object.keys(cluster).sort((a, b) => {\r\n      return cluster[a] - cluster[b];\r\n    });\r\n\r\n    let clustDistrib = clustDistributions[i];\r\n    let orderedVals = orderedFeats.map(feat => {\r\n      let vals = clustDistrib[feat];\r\n      return Object.keys(vals).reduce((a, b) => (vals[a] > vals[b] ? a : b));\r\n    });\r\n\r\n    clustDefining[i] = {\r\n      feats: orderedFeats,\r\n      clusterid: i,\r\n      vals: orderedVals,\r\n      insts: clustInstances[i],\r\n      metrics: calculateFairnessMetrics(clustInstances[i]),\r\n      distrib: clustDistributions[i],\r\n      type: \"bottom\"\r\n    };\r\n  });\r\n\r\n  return clustDefining;\r\n}\r\n","export const PRIMARY_COLOR = \"#1D2737\";\r\nexport const SECONDARY_COLOR = \"#5a6d94\";\r\nexport const TERTIARY_COLOR = \"#d6d6d6\";\r\nexport const HOVERED_COLOR = \"#2979ff\";\r\nexport const CLICKED_COLOR = \"#b71c1c\";\r\nexport const PRIMARY_COLOR_V2 = \"#4169e1\";\r\n\r\nexport const METRICS = [\r\n  { label: \"Accuracy\", value: \"acc\", key: \"acc\" },\r\n  { label: \"Precision\", value: \"prec\", key: \"prec\" },\r\n  { label: \"Recall\", value: \"rec\", key: \"rec\" },\r\n  { label: \"Specificity\", value: \"spec\", key: \"spec\" },\r\n  { label: \"Negative Predictive Value\", value: \"npv\", key: \"npv\" },\r\n  { label: \"False Negative Rate\", value: \"fnr\", key: \"fnr\" },\r\n  { label: \"False Positive Rate\", value: \"fpr\", key: \"fpr\" },\r\n  { label: \"False Discovery Rate\", value: \"fdr\", key: \"fdr\" },\r\n  { label: \"False Omission Rate\", value: \"for\", key: \"for\" },\r\n  { label: \"F1\", value: \"f1\", key: \"f1\" }\r\n];\r\n","// This WebWorker loads takes the loaded data and calcualtes fairnes metrics for it.\r\nexport default () => {\r\n  /**\r\n   * Calculate Common Fairness Metrics\r\n   *\r\n   * @param counts: counts of tp, tn, fp, tn, p, n\r\n   * Note:\r\n   * acc = accuracy\r\n   * rec = recall\r\n   * prec = precision\r\n   * spec = specificity\r\n   * npv = negative predictive value\r\n   * fnr = false negative rate or miss rate\r\n   * fpr = false positive rate\r\n   * fdr = false discovery rate\r\n   * for = false omission rate\r\n   * f1 = f1 score\r\n   */\r\n  function calculateFairnessMetrics(data) {\r\n    let m = calculateBaseRates(data);\r\n\r\n    let metrics = {\r\n      size: data.length,\r\n      p: (100 * m.p) / data.length,\r\n      n: (100 * m.n) / data.length,\r\n      acc: (100 * (m.tp + m.tn)) / (m.p + m.n),\r\n      rec: (100 * m.tp) / (m.tp + m.fn),\r\n      spec: (100 * m.tn) / (m.fp + m.tn),\r\n      prec: (100 * m.tp) / (m.tp + m.fp),\r\n      npv: (100 * m.tn) / (m.tn + m.fn),\r\n      fnr: (100 * m.fn) / (m.fn + m.tp),\r\n      fpr: (100 * m.fp) / (m.fp + m.tn),\r\n      fdr: (100 * m.fp) / (m.fp + m.tp),\r\n      for: (100 * m.fn) / (m.fn + m.tn),\r\n      f1: (100 * 2 * m.tp) / (2 * m.tp + m.fp + m.fn)\r\n    };\r\n\r\n    Object.keys(metrics).forEach(k => {\r\n      if (isNaN(metrics[k])) {\r\n        metrics[k] = 0;\r\n      }\r\n    });\r\n\r\n    return metrics;\r\n  }\r\n\r\n  /** Calculate the base classification COUNTS for a group of instances */\r\n  function calculateBaseRates(items) {\r\n    let p = 0;\r\n    let n = 0;\r\n    let tp = 0;\r\n    let tn = 0;\r\n    let fp = 0;\r\n    let fn = 0;\r\n\r\n    items.forEach(item => {\r\n      let predicted = Math.round(parseFloat(item[\"out\"]));\r\n      let actual = parseInt(item[\"class\"], 10);\r\n\r\n      if (predicted === 1 && actual === 1) {\r\n        tp++;\r\n        p++;\r\n      } else if (predicted === 0 && actual === 0) {\r\n        tn++;\r\n        n++;\r\n      } else if (predicted === 1 && actual === 0) {\r\n        fp++;\r\n        n++;\r\n      } else {\r\n        fn++;\r\n        p++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      p: p,\r\n      n: n,\r\n      tp: tp,\r\n      tn: tn,\r\n      fp: fp,\r\n      fn: fn\r\n    };\r\n  }\r\n\r\n  /** Calculate distribution over instances */\r\n  function calcValueDist(insts, allFeatures, allValues) {\r\n    // init dist\r\n    let dist = {};\r\n    allFeatures.forEach((f, i) => {\r\n      let thisVals = allValues[i];\r\n      let v_dist = {};\r\n      thisVals.forEach((v, i) => {\r\n        v_dist[v] = 0;\r\n      });\r\n      dist[f] = v_dist;\r\n    });\r\n\r\n    // populate dist\r\n    insts.forEach((item, i) => {\r\n      Object.entries(item).forEach(tuple => {\r\n        // tuple = [\"age\", 17]\r\n        dist[tuple[0]][tuple[1]] += 1;\r\n      });\r\n    });\r\n\r\n    return dist;\r\n  }\r\n\r\n  self.addEventListener(\"message\", function(e) { // eslint-disable-line no-restricted-globals\r\n    let out = {};\r\n    let data = e.data;\r\n\r\n    out.data = data;\r\n    out.avgs = calculateFairnessMetrics(data);\r\n    out.feats = Object.keys(data[0]);\r\n\r\n    // calculate values\r\n    let vals = [];\r\n    for (let i = 0; i < out.feats.length; i++) {\r\n      let s = new Set(data.map(p => p[out.feats[i]]));\r\n      let s_arr = Array.from(s);\r\n      vals.push(s_arr);\r\n    }\r\n\r\n    out.vals = vals;\r\n\r\n    // calculate global feat distribution\r\n    let distrib = calcValueDist(data, out.feats, out.vals);\r\n    let distrib_arr = [];\r\n\r\n    let collator = new Intl.Collator(undefined, {\r\n      numeric: true,\r\n      sensitivity: \"base\"\r\n    });\r\n\r\n    out.feats.forEach(feat_name => {\r\n      let r = Object.entries(distrib[feat_name]);\r\n      r.sort((a, b) => collator.compare(a[0], b[0]));\r\n      distrib_arr.push(r);\r\n    });\r\n\r\n    out.distrib = distrib_arr;\r\n\r\n    postMessage(out);\r\n  });\r\n};\r\n","export default class WebWorker {\r\n  constructor(worker) {\r\n    const code = worker.toString();\r\n    const blob = new Blob([\"(\" + code + \")()\"]);\r\n    return new Worker(URL.createObjectURL(blob));\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport VegaLite from \"react-vega-lite\";\r\n\r\nconst spec = {\r\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\r\n  mark: { type: \"bar\", tooltip: true },\r\n  width: 250,\r\n  transform: [\r\n    {\r\n      calculate: \"datum.val/100\",\r\n      as: \"percent\"\r\n    }\r\n  ],\r\n  encoding: {\r\n    y: {\r\n      field: \"name\",\r\n      type: \"ordinal\",\r\n      axis: { title: \"\", labelFontSize: 13, labelPadding: 10 }\r\n    },\r\n    x: {\r\n      field: \"percent\",\r\n      aggregate: \"sum\",\r\n      type: \"quantitative\",\r\n      axis: { title: \"Ground Truth Label Balance\", format: \"%\" }\r\n    },\r\n    color: {\r\n      field: \"color\",\r\n      type: \"nominal\",\r\n      scale: {\r\n        domain: [\"hovpos\", \"hovneg\", \"clickpos\", \"clickneg\"],\r\n        range: [\r\n          \"#64b5f6\",\r\n          \"rgba(100, 181, 246, .3)\",\r\n          \"#e57373\",\r\n          \"rgba(229, 115, 115, .3)\"\r\n        ]\r\n      },\r\n      legend: null\r\n    }\r\n  }\r\n};\r\n\r\nclass ClassDistribution extends Component {\r\n  render() {\r\n    let data = [];\r\n    if (this.props.clickedGroup !== undefined) {\r\n      data.push({\r\n        name: \"Pinned\",\r\n        type: \"Positive\",\r\n        val: this.props.clickedGroup.metrics.p,\r\n        color: \"clickpos\"\r\n      });\r\n      data.push({\r\n        name: \"Pinned\",\r\n        type: \"Negative\",\r\n        val: this.props.clickedGroup.metrics.n,\r\n        color: \"clickneg\"\r\n      });\r\n    }\r\n    if (this.props.hoveredGroup !== undefined) {\r\n      data.push({\r\n        name: \"Hovered\",\r\n        type: \"Positive\",\r\n        val: this.props.hoveredGroup.metrics.p,\r\n        color: \"hovpos\"\r\n      });\r\n      data.push({\r\n        name: \"Hovered\",\r\n        type: \"Negative\",\r\n        val: this.props.hoveredGroup.metrics.n,\r\n        color: \"hovneg\"\r\n      });\r\n    }\r\n\r\n    return <VegaLite data={{ values: data }} spec={spec} />;\r\n  }\r\n}\r\n\r\nexport default ClassDistribution;\r\n","import React, { Component } from \"react\";\r\nimport VegaLite from \"react-vega-lite\";\r\n\r\nconst spec = {\r\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\r\n  width: 250,\r\n  height: 50,\r\n  mark: \"bar\",\r\n  transform: [\r\n    {\r\n      calculate: \"datum.value/100\",\r\n      as: \"percent\"\r\n    }\r\n  ],\r\n  spacing: 5,\r\n  encoding: {\r\n    row: {\r\n      field: \"metric\",\r\n      type: \"ordinal\",\r\n      scale: { padding: 0 },\r\n      header: {title: \"\", labelLimit: 60},\r\n    },\r\n    y: {\r\n      field: \"group\",\r\n      type: \"ordinal\",\r\n      axis: { title: \"\", labels: false }\r\n    },\r\n    x: {\r\n      field: \"percent\",\r\n      type: \"quantitative\",\r\n      scale: {\r\n        domain: [0, 1]\r\n      },\r\n      axis: { title: \"\", format: \"%\" }\r\n    },\r\n    tooltip: {\r\n      field: \"percent\",\r\n      type: \"quantitative\"\r\n    },\r\n    color: {\r\n      field: \"group\",\r\n      type: \"nominal\",\r\n      scale: {\r\n        domain: [\"hovered\", \"pinned\"],\r\n        // range: [HOVERED_COLOR, CLICKED_COLOR]\r\n        range: [\"#64b5f6\", \"#e57373\"]\r\n      },\r\n      legend: null\r\n    }\r\n  }\r\n};\r\n\r\nclass MetricsDistribution extends Component {\r\n  render() {\r\n    let data = [];\r\n    if (this.props.hoveredGroup) {\r\n      data = data.concat(\r\n        this.props.selectedMetrics.map(m => {\r\n          return {\r\n            group: \"hovered\",\r\n            metric: m.label,\r\n            value: this.props.hoveredGroup.metrics[m.value]\r\n          };\r\n        })\r\n      );\r\n    }\r\n    if (this.props.clickedGroup) {\r\n      data = data.concat(\r\n        this.props.selectedMetrics.map(m => {\r\n          return {\r\n            group: \"pinned\",\r\n            metric: m.label,\r\n            value: this.props.clickedGroup.metrics[m.value]\r\n          };\r\n        })\r\n      );\r\n    }\r\n    return <VegaLite data={{ values: data }} spec={spec} />;\r\n  }\r\n}\r\n\r\nexport default MetricsDistribution;\r\n","import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React, { Component } from \"react\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ClassDistribution from \"./ClassDistribution\";\r\nimport \"../style/Radar.css\";\r\nimport MetricsDistribution from \"./MetricsDistribution\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { HOVERED_COLOR, CLICKED_COLOR } from \"../util/globals\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  card: {\r\n    marginTop: 70,\r\n    marginRight: 10,\r\n    height: \"44%\",\r\n    minHeight: \"44%\",\r\n    overflow: \"scroll\",\r\n  },\r\n  featureStyle: {\r\n    textAlign: \"justify\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#1D2737\",\r\n  },\r\n  expand: {\r\n    margin: \"0px auto\",\r\n  },\r\n  metrics: {\r\n    marginTop: 10,\r\n  },\r\n  hovered: {\r\n    color: HOVERED_COLOR,\r\n    paddingRight: 8,\r\n  },\r\n  clicked: {\r\n    color: CLICKED_COLOR,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n    justifyContent: \"space-between\",\r\n    padding: 7,\r\n    marginBottom: 5,\r\n  },\r\n  selectedGroups: {\r\n    marginTop: 8,\r\n  },\r\n  feats: {\r\n    marginTop: 5,\r\n    paddingLeft: 8,\r\n  },\r\n  hoveredCell: {\r\n    paddingRight: 8,\r\n  },\r\n};\r\n\r\nclass ExpandedCard extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps.hovered === this.props.hovered &&\r\n      nextProps.clicked === this.props.clicked\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  export = () => {\r\n    let clickedGroup = this.props.activeGroups[this.props.clicked];\r\n    if (clickedGroup) {\r\n      function saveText(text, filename) {\r\n        var a = document.createElement(\"a\");\r\n        a.setAttribute(\r\n          \"href\",\r\n          \"data:text/plain;charset=utf-u,\" + encodeURIComponent(text)\r\n        );\r\n        a.setAttribute(\"download\", filename);\r\n        a.click();\r\n      }\r\n      saveText(JSON.stringify(clickedGroup), \"clickedgroup.json\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let classes = this.props.classes;\r\n\r\n    let clickedGroup = this.props.activeGroups[this.props.clicked];\r\n    let hoveredGroup = this.props.activeGroups[this.props.hovered];\r\n\r\n    let featsClick = [];\r\n    if (clickedGroup) {\r\n      featsClick = clickedGroup.feats;\r\n      if (clickedGroup.type === \"bottom\") {\r\n        featsClick = clickedGroup.feats.slice(0, 5);\r\n      }\r\n    }\r\n\r\n    let featsHov = [];\r\n    if (hoveredGroup) {\r\n      featsHov = hoveredGroup.feats;\r\n      if (hoveredGroup.type === \"bottom\") {\r\n        featsHov = hoveredGroup.feats.slice(0, 5);\r\n      }\r\n    }\r\n    let feats_comb = [...new Set(featsHov.concat(featsClick))];\r\n\r\n    let feats = feats_comb.map((feat, i) => {\r\n      let hoveredCell = <TableCell />;\r\n      let clickedCell = <TableCell />;\r\n      if (this.props.clicked !== -1 && clickedGroup.feats.includes(feat)) {\r\n        clickedCell = (\r\n          <TableCell align={\"right\"}>\r\n            {clickedGroup.vals[clickedGroup.feats.indexOf(feat)]}\r\n          </TableCell>\r\n        );\r\n      }\r\n      if (this.props.hovered !== -1 && hoveredGroup.feats.includes(feat)) {\r\n        hoveredCell = (\r\n          <TableCell align={\"right\"}>\r\n            <span className={classes.hoveredCell}>\r\n              {hoveredGroup.vals[hoveredGroup.feats.indexOf(feat)]}\r\n            </span>\r\n          </TableCell>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <TableRow key={i}>\r\n          <TableCell className={classes.feat}>{feat}</TableCell>\r\n          {clickedCell}\r\n          {hoveredCell}\r\n        </TableRow>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <div className={classes.header}>\r\n            <h4 className={classes.selectedGroups}>Group Details</h4>\r\n            <Button\r\n              className={classes.exportButton}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={this.export}\r\n            >\r\n              Export\r\n            </Button>\r\n          </div>\r\n          <Divider />\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <MetricsDistribution\r\n                hoveredGroup={hoveredGroup}\r\n                clickedGroup={clickedGroup}\r\n                selectedMetrics={this.props.selectedMetrics}\r\n              />\r\n              <ClassDistribution\r\n                hoveredGroup={hoveredGroup}\r\n                clickedGroup={clickedGroup}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.feats}>\r\n                <Table className={classes.table} padding=\"none\" size=\"small\">\r\n                  <colgroup>\r\n                    <col style={{ width: \"33%\" }} />\r\n                    <col style={{ width: \"33%\" }} />\r\n                    <col style={{ width: \"33%\" }} />\r\n                  </colgroup>\r\n                  <TableHead className={classes.tableHeader}>\r\n                    <TableRow key={0}>\r\n                      <TableCell className={classes.feat}>Feature</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <span className={classes.clicked}>Pinned</span>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <span className={classes.hovered}>Hovered</span>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow key={1}>\r\n                      <TableCell>Size</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {clickedGroup && clickedGroup.metrics.size}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <span className={classes.hoveredCell}>\r\n                          {hoveredGroup && hoveredGroup.metrics.size}\r\n                        </span>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>{feats}</TableBody>\r\n                </Table>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ExpandedCard);\r\n","import React, { Component } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport d3tip from \"d3-tip\";\r\nimport \"../style/BoxPlot.css\";\r\nimport { TERTIARY_COLOR } from \"../util/globals\";\r\n\r\nconst boxWidth = 300;\r\nconst boxHeight = 100;\r\n\r\nclass Histogram extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var margin = {\r\n        top: 50,\r\n        right: 10,\r\n        bottom: 0,\r\n        left: 10\r\n      },\r\n      width = boxWidth - margin.left - margin.right,\r\n      height = boxHeight - margin.top - margin.bottom;\r\n\r\n    this.state = {\r\n      margin,\r\n      width,\r\n      height\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      this.props.type === \"global\" &&\r\n      this.props.dataDistrib.length === 0 &&\r\n      nextProps.dataDistrib.length !== 0\r\n    ) {\r\n      return true;\r\n    } else if (\r\n      this.props.type === \"click\" &&\r\n      this.props.clicked !== nextProps.clicked\r\n    ) {\r\n      return true;\r\n    } else if (\r\n      this.props.type === \"hover\" &&\r\n      this.props.hovered !== nextProps.hovered\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.update();\r\n  }\r\n\r\n  update = () => {\r\n    if (this.props.type === \"global\") {\r\n      this.drawGlobalDistBar(\r\n        this.props.dataDistrib,\r\n        this.props.featName,\r\n        this.props.featIndex,\r\n        this.props.maxy\r\n      );\r\n    } else {\r\n      let groupIndex =\r\n        this.props.type === \"click\" ? this.props.clicked : this.props.hovered;\r\n\r\n      this.drawGroupDistBar(\r\n        this.props.activeGroups,\r\n        groupIndex,\r\n        this.props.type,\r\n        this.props.featName,\r\n        this.props.featIndex,\r\n        this.props.maxy\r\n      );\r\n    }\r\n  };\r\n\r\n  drawGlobalDistBar = (dataDistrib, feat, featIndex, maxy) => {\r\n    let arr = dataDistrib[featIndex];\r\n\r\n    this.drawBar(arr, featIndex, \"global\", maxy);\r\n  };\r\n\r\n  /**\r\n   * @param clickedGroupDist dist for this feature\r\n   * @param type: \"hover\" or \"click\"\r\n   */\r\n  drawGroupDistBar = (\r\n    activeGroups,\r\n    groupIndex,\r\n    type,\r\n    feat,\r\n    featIndex,\r\n    maxy\r\n  ) => {\r\n    // delete existing plots of this type\r\n    d3.select(\"#box-plot-bar-\" + type + \"-\" + featIndex).remove();\r\n\r\n    if (groupIndex >= 0) {\r\n      let group = activeGroups[groupIndex];\r\n\r\n      // TODO temp: need to change format of bottom up subgroups\r\n      if (group.type === \"top\") {\r\n        let feat_dist_arr = group.distrib[featIndex];\r\n        this.drawBar(feat_dist_arr, featIndex, \"bar-\" + type, maxy);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Draw the actual bars yah\r\n   * @param data_arr: [value, count]\r\n   * @param featIndex\r\n   * @param bar_type: \"\", \"bar-click\", or \"bar-hover\"\r\n   */\r\n  drawBar = (data_arr, featIndex, bar_type, maxy) => {\r\n    const node = this.node;\r\n\r\n    let svg = d3\r\n      .select(node)\r\n      .append(\"svg\")\r\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n      .attr(\"viewBox\", \"0 0 300 100\")\r\n      .attr(\"class\", \"box-plot\")\r\n      .attr(\"id\", \"box-plot-\" + bar_type + \"-\" + featIndex)\r\n      .append(\"g\")\r\n      .attr(\r\n        \"transform\",\r\n        \"translate(\" +\r\n          this.state.margin.left +\r\n          \",\" +\r\n          this.state.margin.top +\r\n          \")\"\r\n      );\r\n\r\n    // categorical X\r\n    let x = d3\r\n      .scaleBand()\r\n      .rangeRound([0, 300], 0.1)\r\n      .domain(\r\n        data_arr.map(d => {\r\n          return d[0];\r\n        })\r\n      );\r\n\r\n    let y = d3\r\n      .scaleLinear()\r\n      .range([this.state.height, 0])\r\n      .domain([0, maxy]);\r\n\r\n    let hght = this.state.height;\r\n\r\n    var tip = d3tip()\r\n      .attr(\"class\", \"d3-tip\")\r\n      .offset([-10, 0])\r\n      .html(function(d) {\r\n        return (\r\n          d[0] +\r\n          \": <span style='color:\" +\r\n          TERTIARY_COLOR +\r\n          \"'>\" +\r\n          d[1] +\r\n          \"</span>\"\r\n        );\r\n      });\r\n\r\n    svg.call(tip);\r\n\r\n    svg\r\n      .selectAll(\"rect\")\r\n      .data(data_arr)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => {\r\n        return x(d[0]);\r\n      })\r\n      .attr(\"y\", d => {\r\n        return y(d[1]);\r\n      })\r\n      .attr(\"width\", function(d) {\r\n        return x.bandwidth();\r\n      })\r\n      .attr(\"height\", function(d) {\r\n        return hght - y(d[1]);\r\n      })\r\n      .attr(\"id\", function(d, i) {\r\n        return \"rect-\" + featIndex + \"-\" + i;\r\n      })\r\n      .attr(\"class\", \"barchart-rect \" + bar_type)\r\n      .on(\"mouseover\", tip.show)\r\n      .on(\"mouseout\", tip.hide);\r\n  };\r\n\r\n  render() {\r\n    return <div ref={node => (this.node = node)} />;\r\n  }\r\n}\r\n\r\nexport default Histogram;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport Histogram from \"./Histogram\";\r\nimport {\r\n  PRIMARY_COLOR,\r\n  SECONDARY_COLOR,\r\n  TERTIARY_COLOR\r\n} from \"../util/globals\";\r\n\r\n// import { FaInfoCircle } from \"react-icons/fa\";\r\n\r\nconst styles = {\r\n  drawer: {\r\n    width: \"20%\",\r\n    flexShrink: 0,\r\n    marginTop: 65,\r\n    maxWidth: 360\r\n  },\r\n  feature: {\r\n    margin: 10\r\n  },\r\n  button: {\r\n    margin: \"0px auto\"\r\n  },\r\n  listItem: {\r\n    paddingBottom: \"20px\",\r\n    height: 100,\r\n    alignItems: \"baseline\"\r\n  },\r\n  listText: {\r\n    height: 25\r\n  },\r\n  radio: {\r\n    top: \"25%\"\r\n  },\r\n  divider: {\r\n    marginTop: 5\r\n  },\r\n  boxLabel: {\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"16px\",\r\n    color: PRIMARY_COLOR,\r\n    fontWeight: 500,\r\n    margin: 0\r\n  },\r\n  info: {\r\n    color: PRIMARY_COLOR,\r\n    cursor: \"pointer\"\r\n  }\r\n};\r\n\r\nclass FeatureDrawer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let sub = {};\r\n    let max_ys = [];\r\n\r\n    props.features.forEach((feat_name, feat_i) => {\r\n      sub[feat_i] = new Set();\r\n      let maxy = d3.max(props.dataDistrib[feat_i], d => {\r\n        return d[1];\r\n      });\r\n      max_ys.push(maxy);\r\n    });\r\n\r\n    this.state = {\r\n      checked: new Set(),\r\n      opened: new Set(),\r\n      subchecked: sub,\r\n      features: props.features,\r\n      max_ys: max_ys\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      (this.props.features.length === 0 && nextProps.features.length > 0) ||\r\n      this.props.clicked !== nextProps.clicked ||\r\n      this.props.hovered !== nextProps.hovered ||\r\n      this.compareState(this.state, nextState)\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Determine if state has changed...only comparing size of sets for increased speed.\r\n   */\r\n  compareState = (oldState, newState) => {\r\n    if (\r\n      oldState.opened.size !== newState.opened.size ||\r\n      oldState.checked.size !== newState.checked.size\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    let out = false;\r\n    Object.keys(oldState.subchecked).forEach(k => {\r\n      if (newState.subchecked[k].size !== oldState.subchecked[k].size) {\r\n        out = true;\r\n      }\r\n    });\r\n\r\n    return out;\r\n  };\r\n\r\n  handleToggle = value => () => {\r\n    const { checked } = this.state;\r\n\r\n    let newChecked = new Set(checked);\r\n\r\n    if (newChecked.has(value)) {\r\n      newChecked.delete(value);\r\n    } else {\r\n      newChecked.add(value);\r\n    }\r\n\r\n    this.setState({\r\n      checked: newChecked\r\n    });\r\n  };\r\n\r\n  handleSubToggle = (feat_i, item_i) => () => {\r\n    const { subchecked, checked } = this.state;\r\n\r\n    let subnew = {};\r\n    Object.keys(subchecked).forEach(k => {\r\n      subnew[k] = new Set(subchecked[k]);\r\n    });\r\n\r\n    let n = new Set(checked);\r\n\r\n    if (subnew[feat_i].has(item_i)) {\r\n      subnew[feat_i].delete(item_i);\r\n    } else {\r\n      subnew[feat_i].add(item_i);\r\n    }\r\n\r\n    n.delete(feat_i);\r\n\r\n    this.setState({\r\n      subchecked: subnew,\r\n      checked: n\r\n    });\r\n  };\r\n\r\n  handleClick = feat_i => () => {\r\n    const { opened } = this.state;\r\n\r\n    let newOpened = new Set(opened);\r\n\r\n    if (newOpened.has(feat_i)) {\r\n      newOpened.delete(feat_i);\r\n    } else {\r\n      newOpened.add(feat_i);\r\n    }\r\n    this.setState({\r\n      opened: newOpened\r\n    });\r\n  };\r\n\r\n  handleHover = (i, j) => {\r\n    let selector = \"#rect-\" + i + \"-\" + j;\r\n\r\n    d3.select(selector)\r\n      .style(\"fill\", SECONDARY_COLOR)\r\n      .style(\"opacity\", 1);\r\n  };\r\n\r\n  handleUnhover = (i, j) => {\r\n    let selector = \"#rect-\" + i + \"-\" + j;\r\n\r\n    d3.select(selector)\r\n      .style(\"fill\", TERTIARY_COLOR)\r\n      .style(\"opacity\", 0.8);\r\n  };\r\n\r\n  handleClickSubgroup = () => {\r\n    let groups = {};\r\n    let sub = {};\r\n\r\n    this.props.features.forEach((feat_name, feat_i) => {\r\n      // get value\r\n      if (\r\n        this.state.checked.has(feat_i) ||\r\n        this.state.subchecked[feat_i].size > 0\r\n      ) {\r\n        let val_arr = [];\r\n\r\n        this.state.subchecked[feat_i].forEach(valIndex => {\r\n          val_arr.push(this.props.values[feat_i][valIndex]);\r\n        });\r\n\r\n        groups[feat_name] = val_arr;\r\n      }\r\n\r\n      // reset selection\r\n      sub[feat_i] = new Set();\r\n    });\r\n\r\n    this.props.createSubgroups(groups);\r\n\r\n    this.setState({ checked: new Set(), subchecked: sub });\r\n  };\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    const collator = new Intl.Collator(undefined, {\r\n      numeric: true,\r\n      sensitivity: \"base\"\r\n    });\r\n\r\n    if (this.props.features.length > 0) {\r\n      return (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          classes={{ paper: classes.drawer }}\r\n          variant=\"permanent\"\r\n          anchor=\"left\"\r\n        >\r\n          <List>\r\n            <ListItem key={-1}>\r\n              <Tooltip\r\n                title=\"Create all subgroups of the selected features\"\r\n                placement=\"bottom\"\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  className={classes.button}\r\n                  onClick={this.handleClickSubgroup}\r\n                >\r\n                  Generate Subgroups\r\n                </Button>\r\n              </Tooltip>\r\n              {/* <FaInfoCircle className={classes.info} onClick={() => alert(\"hello\")}/> */}\r\n            </ListItem>\r\n            <Divider />\r\n\r\n            {this.props.features.map((feat_name, feat_i) => (\r\n              <div key={`section-${feat_i}`}>\r\n                <ListItem\r\n                  className={classes.listItem}\r\n                  onClick={this.handleClick(feat_i)}\r\n                >\r\n                  <p className={classes.boxLabel}>{feat_name}</p>\r\n                  {/* Global BoxPlot */}\r\n                  <Histogram\r\n                    featName={feat_name}\r\n                    dataDistrib={this.props.dataDistrib}\r\n                    featIndex={feat_i}\r\n                    type={\"global\"}\r\n                    maxy={this.state.max_ys[feat_i]}\r\n                  />\r\n                  {/* Clicked BoxPlot */}\r\n                  <Histogram\r\n                    featName={feat_name}\r\n                    featIndex={feat_i}\r\n                    clicked={this.props.clicked}\r\n                    hovered={this.props.hovered}\r\n                    activeGroups={this.props.activeGroups}\r\n                    type={\"click\"}\r\n                    maxy= {this.state.max_ys[feat_i]}\r\n                  />\r\n                  {/* Hovered BoxPlot */}\r\n                  <Histogram\r\n                    featName={feat_name}\r\n                    featIndex={feat_i}\r\n                    clicked={this.props.clicked}\r\n                    hovered={this.props.hovered}\r\n                    activeGroups={this.props.activeGroups}\r\n                    type={\"hover\"}\r\n                    maxy={this.state.max_ys[feat_i]}\r\n                  />\r\n\r\n                  <ListItemSecondaryAction className={classes.radio}>\r\n                    <Checkbox\r\n                      onChange={this.handleToggle(feat_i)}\r\n                      checked={this.state.checked.has(feat_i)}\r\n                      disabled={this.state.subchecked[feat_i].size > 0}\r\n                    />\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n\r\n                <Collapse\r\n                  in={this.state.opened.has(feat_i)}\r\n                  timeout=\"auto\"\r\n                  unmountOnExit\r\n                >\r\n                  {this.props.values[feat_i]\r\n                    .sort(collator.compare)\r\n                    .map((value, value_i) => (\r\n                      <ListItem\r\n                        key={`item-${feat_i}-${value_i}`}\r\n                        button\r\n                        onMouseOver={e => this.handleHover(feat_i, value_i, e)}\r\n                        onMouseOut={e => this.handleUnhover(feat_i, value_i, e)}\r\n                      >\r\n                        <ListItemText primary={value} />\r\n\r\n                        <ListItemSecondaryAction>\r\n                          <Checkbox\r\n                            onChange={this.handleSubToggle(feat_i, value_i)}\r\n                            checked={this.state.subchecked[feat_i].has(value_i)}\r\n                          />\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    ))}\r\n                </Collapse>\r\n                <Divider className={classes.divider} />\r\n              </div>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      );\r\n    }\r\n\r\n    return <div className={classes.drawer}>Loading...</div>;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FeatureDrawer);\r\n","import React, { Component } from \"react\";\r\nimport VegaLite from \"react-vega-lite\";\r\nimport { PRIMARY_COLOR } from \"../util/globals\";\r\n\r\nconst spec = {\r\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\r\n  height: 50,\r\n  width: 75,\r\n  data: {\r\n    name: \"myData\"\r\n  },\r\n  transform: [\r\n    {\r\n      calculate: \"datum.makeup/100\",\r\n      as: \"percent\"\r\n    }\r\n  ],\r\n  mark: {type: \"bar\", tooltip: true},\r\n  encoding: {\r\n    y: {\r\n      field: \"value\",\r\n      type: \"ordinal\",\r\n      axis: { title: \"\" },\r\n      sort: { field: \"makeup\", order: \"descending\" }\r\n    },\r\n    x: {\r\n      field: \"percent\",\r\n      type: \"quantitative\",\r\n      axis: { title: \"\", format: \"%\" }\r\n    },\r\n    color: {\r\n      field: \"primary\",\r\n      type: \"nominal\",\r\n      scale: {\r\n        domain: [0, 1],\r\n        range: [PRIMARY_COLOR, \"#718C73\"]\r\n      },\r\n      legend: null\r\n    }\r\n  }\r\n};\r\n\r\nclass ClusterDistribution extends Component {\r\n  render() {\r\n    let cluster = this.props.cluster;\r\n    let feature = this.props.feature;\r\n\r\n    let distrib = cluster.distrib[feature];\r\n    let data = this.props.values[this.props.features.indexOf(feature)].map(\r\n      (val, i) => {\r\n        if (distrib[val]) {\r\n          return {\r\n            value: val,\r\n            makeup: distrib[val] * 100,\r\n            primary: val === this.props.maxVal ? 1 : 0\r\n          };\r\n        } else {\r\n          return {\r\n            value: val,\r\n            makeup: 0,\r\n            primary: 0\r\n          };\r\n        }\r\n      }\r\n    );\r\n\r\n    // only take top 3 so labels are visible on plot\r\n    data = data.sort((a, b) => {\r\n      return b.makeup - a.makeup;\r\n    })\r\n\r\n    data = data.slice(0, 4)\r\n\r\n    return (\r\n      <VegaLite\r\n        data={{ values: data }}\r\n        spec={spec}\r\n        style={{ paddingLeft: 0 }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClusterDistribution;\r\n","// Gets all neighbors in activeGroups that only have one feature difference.\r\nexport function getNeighbors(subgroup, activeGroups) {\r\n  let oneAwayGroups = [];\r\n  activeGroups.forEach(group => {\r\n    let same = group.feats.length;\r\n    let diffFeatInd = -1;\r\n    subgroup.feats.forEach((feat, ind) => {\r\n      let i = group.feats.indexOf(feat);\r\n      if (i >= 0) {\r\n        if (group.vals[i] === subgroup.vals[ind]) {\r\n          same--;\r\n        } else {\r\n          diffFeatInd = ind;\r\n        }\r\n      }\r\n    });\r\n    if (same === 1) {\r\n      group[\"featDiff\"] = diffFeatInd;\r\n      oneAwayGroups.push(group);\r\n    }\r\n  });\r\n  return oneAwayGroups;\r\n}\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ClusterDistribution from \"./ClusterDistribution\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { CLICKED_COLOR, METRICS } from \"../util/globals\";\r\nimport { getNeighbors } from \"../util/neighboringClusters\";\r\nimport { TableHead } from \"@material-ui/core\";\r\nimport \"../style/GroupSuggestions.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  paper: {\r\n    width: \"32%\",\r\n    height: \"90vh\",\r\n    overflow: \"scroll\",\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    marginTop: 70,\r\n  },\r\n  metrics: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n    justifyContent: \"space-between\",\r\n    padding: 7,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n    justifyContent: \"space-between\",\r\n    padding: 7,\r\n  },\r\n  cards: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n    justifyContent: \"center\",\r\n  },\r\n  cardContent: {\r\n    padding: 0,\r\n  },\r\n  divider: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  headerDivider: {\r\n    marginBottom: 7,\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n  },\r\n  fab: {\r\n    float: \"right\",\r\n  },\r\n  paging: {\r\n    float: \"right\",\r\n    display: \"inline-flex\",\r\n    marginTop: 7,\r\n    justifyContent: \"center\",\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n  value: {\r\n    color: \"#718C73\",\r\n  },\r\n  similarGroups: {\r\n    display: \"inline-flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  settings: {\r\n    display: \"inline-flex\",\r\n  },\r\n  sortText: {\r\n    marginRight: 13,\r\n    marginTop: 7,\r\n    marginLeft: 10,\r\n  },\r\n  diffTable: {\r\n    marginTop: 10,\r\n  },\r\n  leftCell: {\r\n    paddingLeft: \"10px\",\r\n    maxWidth: 50,\r\n  },\r\n};\r\n\r\nclass GroupSuggestions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      page: 0,\r\n      showSimilar: false,\r\n      neighbors: [],\r\n      sort: \"acc\",\r\n    };\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.clustersLoaded) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  mouseEnter = (cluster) => {\r\n    this.props.suggestedHover(cluster);\r\n  };\r\n\r\n  mouseLeave = (cluster) => {\r\n    this.props.suggestedUnhover(cluster);\r\n  };\r\n\r\n  mouseClick = (cluster) => {\r\n    this.props.suggestedClick(cluster);\r\n  };\r\n\r\n  pageRight = () => {\r\n    if (this.state.page * 2 + 3 < this.props.clusters.length) {\r\n      this.setState({\r\n        page: this.state.page + 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  pageLeft = () => {\r\n    if (this.state.page !== 0) {\r\n      this.setState({\r\n        page: this.state.page - 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeView = (val) => {\r\n    if (val.target.value === 0) {\r\n      this.setState({\r\n        showSimilar: false,\r\n      });\r\n    } else {\r\n      if (this.props.clicked !== -1) {\r\n        this.setState({\r\n          neighbors: getNeighbors(\r\n            this.props.activeGroups[this.props.clicked],\r\n            this.props.activeGroups.slice()\r\n          ),\r\n          showSimilar: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          showSimilar: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  changeSort = (val) => {\r\n    this.setState({\r\n      sort: val.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let classes = this.props.classes;\r\n\r\n    // SIMILAR subgroups\r\n    if (\r\n      this.state.showSimilar &&\r\n      this.state.neighbors.length !== 0 &&\r\n      this.props.clicked !== -1\r\n    ) {\r\n      let clickedGroup = this.props.activeGroups[this.props.clicked];\r\n      let similarGroups = this.state.neighbors\r\n        .sort((a, b) => {\r\n          return a.metrics[this.state.sort] - b.metrics[this.state.sort];\r\n        })\r\n        .map((neigh, index) => {\r\n          return (\r\n            <Card\r\n              className={\"similar-card\"}\r\n              key={index}\r\n              onMouseEnter={(_) => this.mouseEnter(neigh)}\r\n              onMouseLeave={(_) => this.mouseLeave(neigh)}\r\n              onClick={(_) => this.mouseClick(neigh)}\r\n            >\r\n              <CardContent className={classes.cardContent}>\r\n                <Table className={classes.table} padding=\"dense\">\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell>\r\n                        <b> Group {this.state.page * 2 + index + 1} </b>\r\n                        <br />\r\n                        {neigh.type === \"top\" ? \"Generated\" : \"Suggested\"}\r\n                      </TableCell>\r\n                      <TableCell />\r\n                      <TableCell align=\"right\">\r\n                        {neigh.metrics.size} Instances\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n                <Table className={classes.diffTable} padding=\"dense\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Feature Difference</TableCell>\r\n                      <TableCell style={{ color: CLICKED_COLOR }} align=\"right\">\r\n                        Pinned\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"#718C73\" }} align=\"right\">\r\n                        Similar\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableCell>{clickedGroup.feats[neigh.featDiff]}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {clickedGroup.vals[neigh.featDiff]}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {\r\n                        neigh.vals[\r\n                          neigh.feats.indexOf(\r\n                            clickedGroup.feats[neigh.featDiff]\r\n                          )\r\n                        ]\r\n                      }\r\n                    </TableCell>\r\n                  </TableBody>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        });\r\n\r\n      return (\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.header}>\r\n            <FormControl>\r\n              <Select value={1} onChange={this.changeView}>\r\n                <MenuItem value={0}>Suggested Subgroups</MenuItem>\r\n                <MenuItem value={1}>Similar Subgroups</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <div className={classes.settings}>\r\n              <Typography\r\n                variant=\"body1\"\r\n                className={classes.sortText}\r\n                display=\"block\"\r\n              >\r\n                Sort by:\r\n              </Typography>\r\n              <FormControl>\r\n                <Select value={this.state.sort} onChange={this.changeSort}>\r\n                  {METRICS.map((m) => (\r\n                    <MenuItem value={m.value}>{m.label}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n          <Divider className={classes.headerDivider} />\r\n          <div className={classes.similarGroups}>{similarGroups}</div>\r\n        </Paper>\r\n      );\r\n    } else {\r\n      // SUGGESTED subgroups\r\n      // Get least performing subgroups.\r\n      let bottomClusters = this.props.clusters\r\n        .filter((clust) => clust.metrics.size > this.props.minSize)\r\n        .sort((a, b) => {\r\n          return a.metrics[this.state.sort] - b.metrics[this.state.sort];\r\n        })\r\n        .slice(this.state.page * 2, this.state.page * 2 + 2);\r\n\r\n      let cards = bottomClusters.map((clust, index) => (\r\n        <Card\r\n          className={\"suggested-card\"}\r\n          key={index}\r\n          onMouseEnter={(_) => this.mouseEnter(clust)}\r\n          onMouseLeave={(_) => this.mouseLeave(clust)}\r\n          onClick={(_) => this.mouseClick(clust)}\r\n        >\r\n          <CardContent className={classes.cardContent}>\r\n            <Table className={classes.table} padding=\"none\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell padding=\"none\" className={classes.leftCell}>\r\n                    <b>Group {this.state.page * 2 + index + 1}</b>\r\n                  </TableCell>\r\n                  <TableCell width={80} padding=\"dense\" align=\"right\">\r\n                    {clust.metrics.size} Instances\r\n                  </TableCell>\r\n                </TableRow>\r\n                {clust.feats.map((feat, i) => (\r\n                  <TableRow key={i}>\r\n                    <TableCell padding=\"none\" className={classes.leftCell}>\r\n                      <b className={classes.label}>{feat}</b>\r\n                      <br />\r\n                      <span className={classes.value}>{clust.vals[i]}</span>\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"none\"\r\n                      className={classes.cell}\r\n                      align=\"right\"\r\n                    >\r\n                      <ClusterDistribution\r\n                        maxVal={clust.vals[i]}\r\n                        features={this.props.features}\r\n                        values={this.props.values}\r\n                        cluster={clust}\r\n                        feature={feat}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        </Card>\r\n      ));\r\n\r\n      return (\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.header}>\r\n            <FormControl>\r\n              <Select value={0} onChange={this.changeView}>\r\n                <MenuItem value={0}>Suggested Subgroups</MenuItem>\r\n                <MenuItem value={1}>Similar Subgroups</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <div className={classes.settings}>\r\n              <Typography variant=\"body1\" className={classes.sortText}>\r\n                Sort by:\r\n              </Typography>\r\n              <FormControl>\r\n                <Select value={this.state.sort} onChange={this.changeSort}>\r\n                  {METRICS.map((m) => (\r\n                    <MenuItem key={m.label} value={m.value}>\r\n                      {m.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <div className={classes.paging}>\r\n                <ChevronLeft onClick={this.pageLeft} />\r\n                <Typography variant=\"body1\">\r\n                  {this.state.page * 2 + 1} -{\" \"}\r\n                  {this.state.page * 2 + 2 > this.props.clusters.length\r\n                    ? this.props.clusters.length\r\n                    : this.state.page * 2 + 2}\r\n                </Typography>\r\n                <ChevronRight onClick={this.pageRight} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Divider className={classes.headerDivider} />\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <div className={classes.cards}>{cards[0]}</div>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div className={classes.cards}>{cards[1]}</div>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(GroupSuggestions);\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Select from \"react-select\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { emphasize } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nconst styles = theme => ({\r\n  selectorWrapper: {\r\n    minWidth: 250,\r\n    color: \"white\",\r\n    marginRight: 20,\r\n    marginTop: 10\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\nfunction Control(props) {\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: props.selectProps.classes.input,\r\n          inputRef: props.innerRef,\r\n          children: props.children,\r\n          ...props.innerProps\r\n        }\r\n      }}\r\n      {...props.selectProps.textFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      buttonRef={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={classNames(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  ValueContainer\r\n};\r\n\r\nclass MetricSelector extends Component {\r\n  handleChange = values => {\r\n    this.props.onMetricChange(values);\r\n  };\r\n\r\n  render() {\r\n    // these have to be defined out here or it breaks...idk man\r\n    var selectedOptions = this.props.selectedMetrics;\r\n    var suggs = this.props.suggestions;\r\n\r\n    return (\r\n      <div className={this.props.classes.selectorWrapper}>\r\n        <Select\r\n          classes={this.props.classes}\r\n          options={suggs}\r\n          components={components}\r\n          onChange={this.handleChange}\r\n          value={selectedOptions}\r\n          placeholder=\"Select Fairness Metrics\"\r\n          isMulti\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MetricSelector);\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport \"../style/StripPlot.css\";\r\n\r\nconst styles = {\r\n  plot: {\r\n    display: \"inline-block\",\r\n    minWidth: 500,\r\n    width: \"100%\"\r\n  }\r\n};\r\n\r\nclass StripPlot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let margin = {\r\n      top: 0,\r\n      right: 50,\r\n      bottom: 0,\r\n      left: 50\r\n    };\r\n    let width = 1000;\r\n    let height = 80;\r\n\r\n    let xScale = d3\r\n      .scaleLinear()\r\n      .range([0, width - margin.right - margin.left])\r\n      .domain([0, 100]);\r\n    let yScale = d3\r\n      .scaleLinear()\r\n      .range([height - margin.top - margin.bottom, 0])\r\n      .domain([0, 100]);\r\n\r\n    let xAxis = d3\r\n      .axisBottom()\r\n      .scale(xScale)\r\n      .tickPadding(8)\r\n      .ticks(8)\r\n      .tickFormat(function(d) {\r\n        return d * 1 + \"%\";\r\n      });\r\n\r\n    this.state = {\r\n      margin: margin,\r\n      width: width - margin.left - margin.right,\r\n      height: height - margin.top - margin.bottom,\r\n      xScale: xScale,\r\n      yScale: yScale,\r\n      xAxis: xAxis\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createStripPlot();\r\n  }\r\n\r\n  createStripPlot = () => {\r\n    const node = this.node;\r\n\r\n    d3.select(node)\r\n      .selectAll(\"svg\")\r\n      .remove();\r\n\r\n    this.props.selectedMetrics.forEach(m => {\r\n      let svg = d3\r\n        .select(node)\r\n        .append(\"svg\")\r\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n        .attr(\"viewBox\", \"0 0 1000 105\")\r\n        .attr(\"id\", \"stripplot-\" + m.value)\r\n        .append(\"g\")\r\n        .attr(\r\n          \"transform\",\r\n          \"translate(\" +\r\n            this.state.margin.left +\r\n            \",\" +\r\n            this.state.margin.top +\r\n            \")\"\r\n        );\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"x axis\")\r\n        .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\r\n        .call(this.state.xAxis)\r\n        .append(\"text\")\r\n        .text(m.label)\r\n        .attr(\"class\", \"axis-label\")\r\n        .attr(\"x\", -10)\r\n        .attr(\"y\", -10);\r\n    });\r\n\r\n    this.update();\r\n  };\r\n\r\n  update = () => {\r\n    this.props.selectedMetrics.forEach(m => {\r\n      let svg = d3.select(this.node).select(\"#stripplot-\" + m.value);\r\n\r\n      svg.selectAll(\".percentline\").remove();\r\n\r\n      svg\r\n        .selectAll(\".percentline\")\r\n        .data(this.props.activeGroups, d => d.id)\r\n        .enter()\r\n        .append(\"line\")\r\n        .filter(d => {\r\n          return d.metrics.size > this.props.minSize;\r\n        })\r\n        .attr(\"x1\", d => {\r\n          return this.state.xScale(d.metrics[m.value]) + 50;\r\n        })\r\n        .attr(\"x2\", d => {\r\n          return this.state.xScale(d.metrics[m.value]) + 50;\r\n        })\r\n        .attr(\"y1\", 30)\r\n        .attr(\"y2\", 80)\r\n        .attr(\"class\", \"percentline\")\r\n        .attr(\"id\", d => {\r\n          return \"linecluster\" + d.id;\r\n        })\r\n        .on(\"mouseover\", d => {\r\n          this.props.barHover(d.id);\r\n        })\r\n        .on(\"mouseout\", d => {\r\n          this.props.barHover(-1);\r\n        })\r\n        .on(\"click\", d => {\r\n          this.props.barClick(d.id);\r\n        });\r\n\r\n      delete this.props.avgs.size;\r\n\r\n      let avgG = svg\r\n        .selectAll(\"line.avg\")\r\n        .data(this.props.avgs)\r\n        .enter()\r\n        .append(\"g\");\r\n\r\n      avgG\r\n        .append(\"line\")\r\n        .attr(\"x1\", d => {\r\n          return this.state.xScale(d[m.value]) + 50;\r\n        })\r\n        .attr(\"x2\", d => {\r\n          return this.state.xScale(d[m.value]) + 50;\r\n        })\r\n        .attr(\"y1\", 20)\r\n        .attr(\"y2\", 90)\r\n        .style(\"stroke\", \"#5a6d94\")\r\n        .style(\"stroke-width\", 2)\r\n        .style(\"opacity\", 0.4);\r\n\r\n      avgG\r\n        .append(\"text\")\r\n        .text(d => \"avg: \" + d[m.value].toFixed(2) + \"%\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"x\", d => {\r\n          return this.state.xScale(d[m.value]) + 50;\r\n        })\r\n        .attr(\"y\", 15)\r\n        .attr(\"font-family\", \"sans-serif\")\r\n        .attr(\"font-size\", \"12px\")\r\n        .attr(\"fill\", \"#5a6d94\");\r\n    });\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, _) {\r\n    if (nextProps.minSize !== this.props.minSize) {\r\n      return true;\r\n    }\r\n    if (\r\n      nextProps.selectedMetrics.length !== this.props.selectedMetrics.length\r\n    ) {\r\n      return true;\r\n    }\r\n    if (nextProps.activeGroups.length === this.props.activeGroups.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, _) {\r\n    if (\r\n      prevProps.selectedMetrics.length !== this.props.selectedMetrics.length\r\n    ) {\r\n      this.createStripPlot();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.update();\r\n    return (\r\n      <div\r\n        className={this.props.classes.plot}\r\n        ref={node => (this.node = node)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(StripPlot);\r\n","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { FaMedium, FaScroll, FaGithub, FaGlobe } from \"react-icons/fa\";\r\nimport { PRIMARY_COLOR, TERTIARY_COLOR } from \"../util/globals\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n/* Datasets - Add new dataset imports here. */\r\nimport compasData from \"../data/compas.csv\";\r\nimport adultData from \"../data/adult.csv\";\r\n// import censusData from \"../data/census.csv\";\r\nimport { PRIMARY_COLOR_V2 } from \"../util/globals\";\r\n\r\nconst styles = {\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n  },\r\n  content: {\r\n    width: \"55%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginTop: 65,\r\n    marginLeft: 10,\r\n  },\r\n  subtitle: {\r\n    flexGrow: 1,\r\n    color: TERTIARY_COLOR,\r\n    textAlign: \"center\",\r\n  },\r\n  tagline: {\r\n    flexGrow: 1,\r\n    marginLeft: 30,\r\n    color: TERTIARY_COLOR,\r\n    textAlign: \"left\",\r\n  },\r\n  loadingScreen: {\r\n    minWidth: \"100%\",\r\n    minHeight: \"calc(100% + 22px)\",\r\n    marginTop: -22,\r\n    backgroundColor: PRIMARY_COLOR_V2,\r\n    margin: \"0px auto\",\r\n  },\r\n  loadingText: {\r\n    paddingTop: 150,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  loadingProgress: {\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    color: \"white\",\r\n  },\r\n  datasets: {\r\n    width: \"600px\",\r\n    margin: \"0px auto\",\r\n    marginTop: 10,\r\n  },\r\n  tabletitle: {\r\n    marginTop: 50,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    fontWeight: 800,\r\n  },\r\n  adddata: {\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  dataLink: {\r\n    textDecorationColor: \"black\",\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n  },\r\n  socialLink: {\r\n    padding: 10,\r\n    background: PRIMARY_COLOR,\r\n    margin: 10,\r\n    color: TERTIARY_COLOR,\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    borderColor: \"white\",\r\n    borderRadius: 7,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n  },\r\n  social: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: 70,\r\n  },\r\n  icon: {\r\n    fontSize: 16,\r\n    marginRight: 10,\r\n  },\r\n};\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    let classes = this.props.classes;\r\n\r\n    let loadIcon = \"<></>\";\r\n    if (this.props.loading) {\r\n      loadIcon = <CircularProgress />;\r\n    }\r\n\r\n    return (\r\n      <div className={classes.loadingScreen}>\r\n        <Typography\r\n          variant=\"h2\"\r\n          color=\"inherit\"\r\n          className={classes.loadingText}\r\n        >\r\n          <strong>FairVis</strong>{\" \"}\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.subtitle}>\r\n          Audit Classification Models for Intersectional Bias\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.tabletitle}>\r\n          Select a Dataset\r\n        </Typography>\r\n        <Paper className={classes.datasets}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Dataset</TableCell>\r\n                <TableCell>Goal</TableCell>\r\n                <TableCell>Size</TableCell>\r\n                <TableCell align=\"center\">{loadIcon}</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            {/* Add a new row to this body for a dataset */}\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <a\r\n                    className={classes.dataLink}\r\n                    href=\"https://archive.ics.uci.edu/ml/datasets/Adult\"\r\n                  >\r\n                    UCI Adult\r\n                  </a>\r\n                </TableCell>\r\n                <TableCell>Predict income >$50K</TableCell>\r\n                <TableCell>32,562</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={(_) => this.props.loadData(adultData)}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <a\r\n                    className={classes.dataLink}\r\n                    href=\"https://github.com/propublica/compas-analysis/\"\r\n                  >\r\n                    COMPAS\r\n                  </a>\r\n                </TableCell>\r\n                <TableCell>Predict recidivism</TableCell>\r\n                <TableCell>6,173</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={(_) => this.props.loadData(compasData)}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n              {/* <TableRow> \r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <a\r\n                    className={classes.dataLink}\r\n                    href=\"https://archive.ics.uci.edu/ml/datasets/Census-Income+%28KDD%29\"\r\n                  >\r\n                    UCI Census-Income\r\n                  </a>\r\n                </TableCell>\r\n                <TableCell>Predict income >$50K</TableCell>\r\n                <TableCell>199,523</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={_ => this.props.loadData(censusData)}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow> */}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        <a\r\n          href=\"https://github.com/poloclub/FairVis/blob/master/README.md\"\r\n          className={classes.adddata}\r\n        >\r\n          <p>Instructions for adding a custom dataset</p>\r\n        </a>\r\n\r\n        <div className={classes.social}>\r\n\r\n          <Button\r\n              style={{marginRight: 10}}\r\n              variant=\"contained\"\r\n              href=\"https://arxiv.org/abs/1904.05419\"\r\n            >\r\n              <FaScroll className={classes.icon} />\r\n              Full Paper\r\n            </Button>\r\n            <Button\r\n              style={{marginRight: 10}}\r\n              variant=\"contained\"\r\n              href=\"https://medium.com/p/acbd362a3e2f\"\r\n            >\r\n              <FaMedium className={classes.icon} />\r\n              Blog\r\n            </Button>\r\n\r\n            <Button\r\n              style={{marginRight: 10}}\r\n              variant=\"contained\"\r\n              href=\"https://github.com/poloclub/FairVis\"\r\n            >\r\n              <FaGithub className={classes.icon} />\r\n              Code\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              href=\"https://cabreraalex.com/#/paper/fairvis\"\r\n            >\r\n              <FaGlobe className={classes.icon} />\r\n              Cite\r\n            </Button>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Welcome);\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\nimport * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport \"../style/App.css\";\r\nimport { getClusters } from \"../util/clusterDescriptions\";\r\nimport { createSubgroups } from \"../util/generateSubgroups\";\r\nimport {\r\n  METRICS,\r\n  PRIMARY_COLOR,\r\n  SECONDARY_COLOR,\r\n  TERTIARY_COLOR,\r\n} from \"../util/globals\";\r\nimport worker from \"../workers/dataLoader.js\";\r\nimport WebWorker from \"../workers/WebWorker\";\r\nimport ExpandedCard from \"./ExpandedCard\";\r\nimport FeatureDrawer from \"./FeatureDrawer\";\r\nimport GroupSuggestions from \"./GroupSuggestions\";\r\nimport MetricSelector from \"./MetricSelector\";\r\nimport StripPlot from \"./StripPlot\";\r\nimport Welcome from \"./Welcome\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nReactGA.initialize(\"UA-50459890-3\");\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: PRIMARY_COLOR,\r\n    },\r\n    secondary: {\r\n      main: SECONDARY_COLOR,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiSlider: {\r\n      thumb: {\r\n        backgroundColor: \"#EBEBEB\",\r\n      },\r\n      track: {\r\n        backgroundColor: \"#EBEBEB\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst styles = {\r\n  appBar: {\r\n    zIndex: 1,\r\n  },\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n  },\r\n  content: {\r\n    width: \"55%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginTop: 65,\r\n    marginLeft: 10,\r\n  },\r\n  plot: {\r\n    width: \"100%\",\r\n  },\r\n  slider: {\r\n    width: 150,\r\n    padding: 20,\r\n    marginRight: 30,\r\n  },\r\n  reset: {\r\n    float: \"right\",\r\n  },\r\n  subtitle: {\r\n    flexGrow: 1,\r\n    color: TERTIARY_COLOR,\r\n    textAlign: \"center\",\r\n  },\r\n  tagline: {\r\n    flexGrow: 1,\r\n    marginLeft: 30,\r\n    color: TERTIARY_COLOR,\r\n    textAlign: \"left\",\r\n  },\r\n  loadingScreen: {\r\n    minWidth: \"100%\",\r\n    minHeight: \"calc(100% + 22px)\",\r\n    marginTop: -22,\r\n    backgroundColor: PRIMARY_COLOR,\r\n    margin: \"0px auto\",\r\n  },\r\n  loadingText: {\r\n    paddingTop: 150,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  loadingProgress: {\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    color: \"white\",\r\n  },\r\n  datasets: {\r\n    width: \"600px\",\r\n    margin: \"0px auto\",\r\n    marginTop: 10,\r\n  },\r\n  tabletitle: {\r\n    marginTop: 50,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    fontWeight: 800,\r\n  },\r\n  adddata: {\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    document.title = \"FairVis - Audit Classification for Intersectional Bias\";\r\n\r\n    /**\r\n     * Every subgroup in the activeGroups array should have the following form:\r\n     * {\r\n     *  feats: -> Array of features defining the group\r\n     *  vals: -> Array of values corresponding to the features (same indices)\r\n     *  insts: -> Array of all the instances belonging to the subgroup\r\n     *  metrics: -> Object containing all the base metrics (Acc, Prec, etc.)\r\n     *  type: -> The type of subgroup it is, either 'top' or 'bottom'\r\n     *  distrib: -> Value distribution for each feature\r\n     * }\r\n     */\r\n    this.state = {\r\n      // Array of instances with features, label, class output, and cluster\r\n      data: [],\r\n      // distribution counts of data in same order as features, sorted by value\r\n      dataDistrib: {},\r\n      // Array of clusters from DBSCAN with metrics and value distribution\r\n      clusters: [],\r\n      // Array of active groups with values and metrics\r\n      activeGroups: [],\r\n      // Object of metrics for the overall group\r\n      avgs: [],\r\n\r\n      // Features and values for all instances\r\n      features: [],\r\n      values: [],\r\n\r\n      // State of StripPlot\r\n      hovered: -1,\r\n      clicked: -1,\r\n\r\n      // State for selected metrics, by default accuracy, recall, and specificity\r\n      selectedMetrics: METRICS.slice(0, 3),\r\n\r\n      minSize: 0,\r\n\r\n      loading: 0,\r\n      dataLoaded: false,\r\n      clustersLoaded: false,\r\n    };\r\n  }\r\n\r\n  loadData = (data) => {\r\n    this.setState({ loading: 1 });\r\n\r\n    // WebWorker to run preprocessing in parallel.\r\n    let loaderWorker = new WebWorker(worker);\r\n\r\n    loaderWorker.addEventListener(\"message\", (r) => {\r\n      let out = r.data;\r\n      let clusters = getClusters(out.data, out.feats, out.vals);\r\n      this.setState({\r\n        data: out.data,\r\n        dataDistrib: out.distrib,\r\n        avgs: [out.avgs],\r\n        features: out.feats,\r\n        values: out.vals,\r\n        clusters: clusters,\r\n        dataLoaded: true,\r\n        clustersLoaded: true,\r\n      });\r\n    });\r\n    d3.csv(data).then((d) => loaderWorker.postMessage(d));\r\n  };\r\n\r\n  createSubgroups = (groups) => {\r\n    // TODO: Prevent adding duplicate subgroups\r\n    let subgroups = createSubgroups(\r\n      this.state.data,\r\n      groups,\r\n      this.state.activeGroups.length,\r\n      this.state.features,\r\n      this.state.values\r\n    );\r\n    this.setState({\r\n      activeGroups: this.state.activeGroups.concat(subgroups),\r\n    });\r\n  };\r\n\r\n  // Either -1 or the cluster that was hovered.\r\n  suggestedHover = (clust) => {\r\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\r\n\r\n    const foundArr = this.state.activeGroups.filter(\r\n      (el) => el.clusterid === clust.clusterid\r\n    );\r\n\r\n    if (foundArr.length === 0) {\r\n      clust.id = this.state.activeGroups.length;\r\n\r\n      this.setState(\r\n        {\r\n          activeGroups: this.state.activeGroups.concat(clust),\r\n          hovered: clust.id,\r\n        },\r\n        () => {\r\n          d3.selectAll(\"#linecluster\" + clust.id).classed(\"linehover\", true);\r\n          d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\r\n            \"lineclick\",\r\n            true\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      d3.selectAll(\"#linecluster\" + foundArr[0].id).classed(\"linehover\", true);\r\n      this.setState(\r\n        {\r\n          hovered: foundArr[0].id,\r\n        },\r\n        () => {\r\n          d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\r\n            \"lineclick\",\r\n            true\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  suggestedUnhover = (clust) => {\r\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\r\n\r\n    let newActives = this.state.activeGroups.filter(\r\n      (e) => e.id === this.state.clicked || e.id !== clust.id\r\n    );\r\n\r\n    this.setState(\r\n      {\r\n        activeGroups: newActives,\r\n        hovered: -1,\r\n      },\r\n      () => {\r\n        d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\r\n          \"lineclick\",\r\n          true\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Have to set id to length -1 since groups gets added once on hover then again\r\n   * on click. If not it breaks when hovering later on\r\n   */\r\n  suggestedClick = (clust) => {\r\n    d3.selectAll(\".lineclick\").classed(\"lineclick\", false);\r\n\r\n    const foundArr = this.state.activeGroups.filter(\r\n      (el) => el.clusterid === clust.clusterid\r\n    );\r\n\r\n    if (foundArr.length === 0) {\r\n      clust.id = this.state.activeGroups.length;\r\n\r\n      this.setState(\r\n        {\r\n          activeGroups: this.state.activeGroups.concat(clust),\r\n          clicked: clust.id,\r\n        },\r\n        () => {\r\n          d3.selectAll(\"#linecluster\" + clust.id).classed(\"lineclick\", true);\r\n        }\r\n      );\r\n    } else {\r\n      d3.selectAll(\"#linecluster\" + foundArr[0].id).classed(\"lineclick\", true);\r\n      this.setState({\r\n        clicked: foundArr[0].id,\r\n      });\r\n    }\r\n  };\r\n\r\n  barHover = (id) => {\r\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\r\n\r\n    d3.selectAll(\"#linecluster\" + id).classed(\"linehover\", true);\r\n\r\n    this.setState({\r\n      hovered: id,\r\n    });\r\n  };\r\n\r\n  barClick = (id) => {\r\n    d3.selectAll(\".lineclick\").classed(\"lineclick\", false);\r\n    d3.selectAll(\"#linecluster\" + id).classed(\"lineclick\", true);\r\n\r\n    this.setState({\r\n      clicked: id,\r\n    });\r\n  };\r\n\r\n  changeMinSize = (_, val) => {\r\n    this.setState({\r\n      minSize: val,\r\n    });\r\n  };\r\n\r\n  resetGroups = () => {\r\n    this.setState({\r\n      hovered: -1,\r\n      clicked: -1,\r\n      minSize: 0,\r\n      activeGroups: [],\r\n    });\r\n  };\r\n\r\n  handleMetricsChange = (m) => {\r\n    this.setState({\r\n      selectedMetrics: m,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let classes = this.props.classes;\r\n\r\n    if (!this.state.dataLoaded) {\r\n      return <Welcome loadData={this.loadData} loading={this.state.loading} />;\r\n    }\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography\r\n              inline\r\n              variant=\"h4\"\r\n              color=\"inherit\"\r\n              className={classes.title}\r\n            >\r\n              FairVis\r\n            </Typography>\r\n            <Typography inline variant=\"h6\" className={classes.tagline}>\r\n              {\" \"}\r\n              Audit Classification for Intersectional Bias{\" \"}\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"inherit\">\r\n              Minimum Size: {this.state.minSize}\r\n            </Typography>\r\n            <Slider\r\n              className={classes.slider}\r\n              value={this.state.minSize}\r\n              onChange={this.changeMinSize}\r\n              step={1}\r\n              min={0}\r\n              max={\r\n                this.state.activeGroups.length === 0\r\n                  ? 0\r\n                  : d3.max(this.state.activeGroups, (d) => d.metrics.size)\r\n              }\r\n            />\r\n            <Button\r\n              className={classes.reset}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={this.resetGroups}\r\n            >\r\n              Reset Groups\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.body}>\r\n          <FeatureDrawer\r\n            features={this.state.features}\r\n            values={this.state.values}\r\n            createSubgroups={this.createSubgroups}\r\n            dataDistrib={this.state.dataDistrib}\r\n            dataLoaded={this.state.dataLoaded}\r\n            hovered={this.state.hovered}\r\n            clicked={this.state.clicked}\r\n            activeGroups={this.state.activeGroups}\r\n          />\r\n          <div className={classes.content}>\r\n            <MetricSelector\r\n              className={classes.metricSelector}\r\n              onMetricChange={this.handleMetricsChange}\r\n              suggestions={METRICS}\r\n              selectedMetrics={this.state.selectedMetrics}\r\n            />\r\n            <div className={classes.plot}>\r\n              <StripPlot\r\n                activeGroups={this.state.activeGroups}\r\n                avgs={this.state.avgs}\r\n                barHover={this.barHover}\r\n                barClick={this.barClick}\r\n                minSize={this.state.minSize}\r\n                selectedMetrics={this.state.selectedMetrics}\r\n              />\r\n            </div>\r\n            {/* <GroupSuggestions\r\n              clusters={this.state.clusters}\r\n              minSize={this.state.minSize}\r\n              suggestedHover={this.suggestedHover}\r\n              suggestedUnhover={this.suggestedUnhover}\r\n              suggestedClick={this.suggestedClick}\r\n              clustersLoaded={this.state.clustersLoaded}\r\n              features={this.state.features}\r\n              values={this.state.values}\r\n              clicked={this.state.clicked}\r\n              activeGroups={this.state.activeGroups}\r\n            /> */}\r\n            <ExpandedCard\r\n              hovered={this.state.hovered}\r\n              clicked={this.state.clicked}\r\n              activeGroups={this.state.activeGroups}\r\n              selectedMetrics={this.state.selectedMetrics}\r\n              clusters={this.state.clusters}\r\n            />\r\n          </div>\r\n          {/* <ExpandedCard\r\n            hovered={this.state.hovered}\r\n            clicked={this.state.clicked}\r\n            activeGroups={this.state.activeGroups}\r\n            selectedMetrics={this.state.selectedMetrics}\r\n            clusters={this.state.clusters}\r\n          /> */}\r\n          <GroupSuggestions\r\n            clusters={this.state.clusters}\r\n            minSize={this.state.minSize}\r\n            suggestedHover={this.suggestedHover}\r\n            suggestedUnhover={this.suggestedUnhover}\r\n            suggestedClick={this.suggestedClick}\r\n            clustersLoaded={this.state.clustersLoaded}\r\n            features={this.state.features}\r\n            values={this.state.values}\r\n            clicked={this.state.clicked}\r\n            activeGroups={this.state.activeGroups}\r\n          />\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}